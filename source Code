import matplotlib.pyplot as plt
import tensorflow as tf
import pandas as pd
import numpy as np
import warnings
warnings.filterwarnings('ignore')
from tensorflow import keras
from keras import layers
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Activation, Dropout, Flatten, Dense
from tensorflow.keras.layers import Conv2D, MaxPooling2D
from tensorflow.keras.utils import image_dataset_from_directory
from tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img
import os
import matplotlib.image as mpimg

from zipfile import ZipFile
data_path = 'dog-vs-cat-classification.zip'
import os
data_file_exists = os.path.isfile(data_path)
print(f"Data file exists: {data_file_exists}")
file_extension = data_path.split('.')[-1]
print(f"File extension: {file_extension}")
!pip install unrar

!unzip dog-vs-cat-classification.zip
!ls dog-vs-cat-classification.zip
print('The dataset has been extracted.')
path = '/content/dog-vs-cat-classification.zip/PetImages'
classes = os.listdir(path)
print(classes)
  # ['cats', 'dogs']


fig = plt.gcf()
fig.set_size_inches(16, 16)
cat_dir = os.path.join('dog-vs-cat-classification/PetImages/Cat')
dog_dir = os.path.join('dog-vs-cat-classification/PetImages/Dog')
cat_names = os.listdir(cat_dir)
dog_names = os.listdir(dog_dir)
pic_index = 210
cat_images = [os.path.join(cat_dir,dog_dir)]

for i, img_path in enumerate(cat_images + dog_images):
    sp = plt.subplot(5, 4, i + 1)
    sp.axis('Off')
    img = mpimg.imread(img_path)
    plt.imshow(img)

plt.show()

model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)),
    MaxPooling2D(2, 2),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D(2, 2),
    Conv2D(128, (3, 3), activation='relu'),
    MaxPooling2D(2, 2),
    Flatten(),
    Dense(512, activation='relu'),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
